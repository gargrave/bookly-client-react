// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookForm with "book" populated renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    className="bookly-form bookly-book-form"
    noValidate={true}
    onSubmit={[Function]}
>
    <div
        className="input-field"
    >
        <label
            htmlFor="title"
        >
            Title:
        </label>
        <input
            id="title"
            name="title"
            onChange={[Function]}
            type="text"
            value=""
        />
    </div>
    <AuthorSelect
        author={Object {}}
        authors={Array []}
        onChange={[Function]}
    />
    <div
        className="input-field"
    >
        <Button
            canSubmit={true}
            onClick={[Function]}
            position="left"
            text="Submit"
            type="success"
        />
        <Button
            extraClasses="float-right"
            onClick={[Function]}
            text="Cancel"
            type="light"
        />
    </div>
</form>,
  "nodes": Array [
    <form
      className="bookly-form bookly-book-form"
      noValidate={true}
      onSubmit={[Function]}
>
      <div
            className="input-field"
      >
            <label
                  htmlFor="title"
            >
                  Title:
            </label>
            <input
                  id="title"
                  name="title"
                  onChange={[Function]}
                  type="text"
                  value=""
            />
      </div>
      <AuthorSelect
            author={Object {}}
            authors={Array []}
            onChange={[Function]}
      />
      <div
            className="input-field"
      >
            <Button
                  canSubmit={true}
                  onClick={[Function]}
                  position="left"
                  text="Submit"
                  type="success"
            />
            <Button
                  extraClasses="float-right"
                  onClick={[Function]}
                  text="Cancel"
                  type="light"
            />
      </div>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BookForm
        authors={Array []}
        book={
                Object {
                        "author": Object {},
                        "title": "",
                      }
        }
        onAuthorChange={[Function]}
        onCancel={[Function]}
        onInputChange={[Function]}
        onSubmit={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "authors": Array [],
          "book": Object {
            "author": Object {},
            "title": "",
          },
          "onAuthorChange": [Function],
          "onCancel": [Function],
          "onInputChange": [Function],
          "onSubmit": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          className="bookly-form bookly-book-form"
          noValidate={true}
          onSubmit={[Function]}
>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="title"
                    >
                              Title:
                    </label>
                    <input
                              id="title"
                              name="title"
                              onChange={[Function]}
                              type="text"
                              value=""
                    />
          </div>
          <AuthorSelect
                    author={Object {}}
                    authors={Array []}
                    onChange={[Function]}
          />
          <div
                    className="input-field"
          >
                    <Button
                              canSubmit={true}
                              onClick={[Function]}
                              position="left"
                              text="Submit"
                              type="success"
                    />
                    <Button
                              extraClasses="float-right"
                              onClick={[Function]}
                              text="Cancel"
                              type="light"
                    />
          </div>
</form>,
        "_debugID": 2,
        "_renderedOutput": <form
          className="bookly-form bookly-book-form"
          noValidate={true}
          onSubmit={[Function]}
>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="title"
                    >
                              Title:
                    </label>
                    <input
                              id="title"
                              name="title"
                              onChange={[Function]}
                              type="text"
                              value=""
                    />
          </div>
          <AuthorSelect
                    author={Object {}}
                    authors={Array []}
                    onChange={[Function]}
          />
          <div
                    className="input-field"
          >
                    <Button
                              canSubmit={true}
                              onClick={[Function]}
                              position="left"
                              text="Submit"
                              type="success"
                    />
                    <Button
                              extraClasses="float-right"
                              onClick={[Function]}
                              text="Cancel"
                              type="light"
                    />
          </div>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BookForm
    authors={Array []}
    book={
        Object {
            "author": Object {},
            "title": "",
          }
    }
    onAuthorChange={[Function]}
    onCancel={[Function]}
    onInputChange={[Function]}
    onSubmit={[Function]}
/>,
}
`;
