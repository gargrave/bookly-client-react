// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm with "user" populated renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    className="bookly-form bookly-login-form"
    noValidate={true}
    onSubmit={[Function]}
>
    <div
        className="input-field"
    >
        <label
            htmlFor="email"
        >
            Email:
        </label>
        <input
            id="email"
            name="email"
            onChange={[Function]}
            type="email"
            value="whatever@gmail.com"
        />
    </div>
    <div
        className="input-field"
    >
        <label
            htmlFor="password"
        >
            Password:
        </label>
        <input
            id="password"
            name="password"
            onChange={[Function]}
            type="password"
            value="password"
        />
    </div>
    <div
        className="input-field"
    >
        <button
            className="submit-button"
            onClick={[Function]}
            type="submit"
        >
            Login
        </button>
    </div>
</form>,
  "nodes": Array [
    <form
      className="bookly-form bookly-login-form"
      noValidate={true}
      onSubmit={[Function]}
>
      <div
            className="input-field"
      >
            <label
                  htmlFor="email"
            >
                  Email:
            </label>
            <input
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value="whatever@gmail.com"
            />
      </div>
      <div
            className="input-field"
      >
            <label
                  htmlFor="password"
            >
                  Password:
            </label>
            <input
                  id="password"
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value="password"
            />
      </div>
      <div
            className="input-field"
      >
            <button
                  className="submit-button"
                  onClick={[Function]}
                  type="submit"
            >
                  Login
            </button>
      </div>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <LoginForm
        handleInputChange={[Function]}
        handleSubmit={[Function]}
        user={
                Object {
                        "email": "whatever@gmail.com",
                        "password": "password",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "handleInputChange": [Function],
          "handleSubmit": [Function],
          "user": Object {
            "email": "whatever@gmail.com",
            "password": "password",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          className="bookly-form bookly-login-form"
          noValidate={true}
          onSubmit={[Function]}
>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="email"
                    >
                              Email:
                    </label>
                    <input
                              id="email"
                              name="email"
                              onChange={[Function]}
                              type="email"
                              value="whatever@gmail.com"
                    />
          </div>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="password"
                    >
                              Password:
                    </label>
                    <input
                              id="password"
                              name="password"
                              onChange={[Function]}
                              type="password"
                              value="password"
                    />
          </div>
          <div
                    className="input-field"
          >
                    <button
                              className="submit-button"
                              onClick={[Function]}
                              type="submit"
                    >
                              Login
                    </button>
          </div>
</form>,
        "_debugID": 2,
        "_renderedOutput": <form
          className="bookly-form bookly-login-form"
          noValidate={true}
          onSubmit={[Function]}
>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="email"
                    >
                              Email:
                    </label>
                    <input
                              id="email"
                              name="email"
                              onChange={[Function]}
                              type="email"
                              value="whatever@gmail.com"
                    />
          </div>
          <div
                    className="input-field"
          >
                    <label
                              htmlFor="password"
                    >
                              Password:
                    </label>
                    <input
                              id="password"
                              name="password"
                              onChange={[Function]}
                              type="password"
                              value="password"
                    />
          </div>
          <div
                    className="input-field"
          >
                    <button
                              className="submit-button"
                              onClick={[Function]}
                              type="submit"
                    >
                              Login
                    </button>
          </div>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LoginForm
    handleInputChange={[Function]}
    handleSubmit={[Function]}
    user={
        Object {
            "email": "whatever@gmail.com",
            "password": "password",
          }
    }
/>,
}
`;
