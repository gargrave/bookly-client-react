// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountDetailView renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="account-detail-view"
>
    <h2>
        My Account
    </h2>
    <p
        className="email-display"
    >
        <strong>
            Email: 
        </strong>
        mockuser1@gmail.com
    </p>
</div>,
  "nodes": Array [
    <div
      className="account-detail-view"
>
      <h2>
            My Account
      </h2>
      <p
            className="email-display"
      >
            <strong>
                  Email: 
            </strong>
            mockuser1@gmail.com
      </p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <AccountDetailView
        user={Object {}}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "user": Object {},
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="account-detail-view"
>
          <h2>
                    My Account
          </h2>
          <p
                    className="email-display"
          >
                    <strong>
                              Email: 
                    </strong>
                    mockuser1@gmail.com
          </p>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="account-detail-view"
>
          <h2>
                    My Account
          </h2>
          <p
                    className="email-display"
          >
                    <strong>
                              Email: 
                    </strong>
                    mockuser1@gmail.com
          </p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AccountDetailView
    user={Object {}}
/>,
}
`;
