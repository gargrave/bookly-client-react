// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorList matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <AuthorListDetail
        author={
            Object {
                "firstName": "A",
                "id": 0,
                "lastName": "B",
              }
        }
        onClick={[Function]}
    />
    <AuthorListDetail
        author={
            Object {
                "firstName": "C",
                "id": 1,
                "lastName": "D",
              }
        }
        onClick={[Function]}
    />
    <AuthorListDetail
        author={
            Object {
                "firstName": "E",
                "id": 2,
                "lastName": "F",
              }
        }
        onClick={[Function]}
    />
</div>,
  "nodes": Array [
    <div>
      <AuthorListDetail
            author={
                  Object {
                        "firstName": "A",
                        "id": 0,
                        "lastName": "B",
                      }
            }
            onClick={[Function]}
      />
      <AuthorListDetail
            author={
                  Object {
                        "firstName": "C",
                        "id": 1,
                        "lastName": "D",
                      }
            }
            onClick={[Function]}
      />
      <AuthorListDetail
            author={
                  Object {
                        "firstName": "E",
                        "id": 2,
                        "lastName": "F",
                      }
            }
            onClick={[Function]}
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <AuthorList
        authors={
                Array [
                        Object {
                          "firstName": "A",
                          "id": 0,
                          "lastName": "B",
                        },
                        Object {
                          "firstName": "C",
                          "id": 1,
                          "lastName": "D",
                        },
                        Object {
                          "firstName": "E",
                          "id": 2,
                          "lastName": "F",
                        },
                      ]
        }
        onAuthorClick={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "authors": Array [
            Object {
              "firstName": "A",
              "id": 0,
              "lastName": "B",
            },
            Object {
              "firstName": "C",
              "id": 1,
              "lastName": "D",
            },
            Object {
              "firstName": "E",
              "id": 2,
              "lastName": "F",
            },
          ],
          "onAuthorClick": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "A",
                                        "id": 0,
                                        "lastName": "B",
                                      }
                    }
                    onClick={[Function]}
          />
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "C",
                                        "id": 1,
                                        "lastName": "D",
                                      }
                    }
                    onClick={[Function]}
          />
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "E",
                                        "id": 2,
                                        "lastName": "F",
                                      }
                    }
                    onClick={[Function]}
          />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "A",
                                        "id": 0,
                                        "lastName": "B",
                                      }
                    }
                    onClick={[Function]}
          />
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "C",
                                        "id": 1,
                                        "lastName": "D",
                                      }
                    }
                    onClick={[Function]}
          />
          <AuthorListDetail
                    author={
                              Object {
                                        "firstName": "E",
                                        "id": 2,
                                        "lastName": "F",
                                      }
                    }
                    onClick={[Function]}
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AuthorList
    authors={
        Array [
            Object {
              "firstName": "A",
              "id": 0,
              "lastName": "B",
            },
            Object {
              "firstName": "C",
              "id": 1,
              "lastName": "D",
            },
            Object {
              "firstName": "E",
              "id": 2,
              "lastName": "F",
            },
          ]
    }
    onAuthorClick={[Function]}
/>,
}
`;
